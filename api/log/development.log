  [1m[35mSQL (3.0ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (12.0ms)[0m  [1m[35mDROP TABLE IF EXISTS "comments" CASCADE[0m
  [1m[35m (31.5ms)[0m  [1m[35mCREATE TABLE "comments" ("id" bigserial primary key, "uuid" character varying NOT NULL, "user_id" bigint, "post_id" bigint, "body" text DEFAULT '' NOT NULL, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (1.7ms)[0m  [1m[35mCREATE  INDEX  "index_comments_on_post_id" ON "comments"  ("post_id")[0m
  [1m[35m (3.9ms)[0m  [1m[35mCREATE  INDEX  "index_comments_on_user_id" ON "comments"  ("user_id")[0m
  [1m[35m (2.9ms)[0m  [1m[35mCREATE UNIQUE INDEX  "index_comments_on_uuid" ON "comments"  ("uuid")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "posts" CASCADE[0m
  [1m[35m (4.7ms)[0m  [1m[35mCREATE TABLE "posts" ("id" bigserial primary key, "uuid" character varying NOT NULL, "user_id" bigint, "title" character varying DEFAULT '' NOT NULL, "body" text DEFAULT '' NOT NULL, "published_at" timestamp, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (2.2ms)[0m  [1m[35mCREATE  INDEX  "index_posts_on_user_id" ON "posts"  ("user_id")[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE UNIQUE INDEX  "index_posts_on_uuid" ON "posts"  ("uuid")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  [1m[35m (3.8ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "uuid" character varying NOT NULL, "name" character varying NOT NULL, "email" character varying NOT NULL, "password_digest" character varying NOT NULL, "admin" boolean DEFAULT 'f' NOT NULL, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE UNIQUE INDEX  "index_users_on_email" ON "users"  ("email")[0m
  [1m[35m (1.1ms)[0m  [1m[35mCREATE UNIQUE INDEX  "index_users_on_uuid" ON "users"  ("uuid")[0m
  [1m[35m (7.3ms)[0m  [1m[35mALTER TABLE "comments" ADD CONSTRAINT "fk_rails_2fd19c0db7"
FOREIGN KEY ("post_id")
  REFERENCES "posts" ("id")
[0m
  [1m[35m (5.5ms)[0m  [1m[35mALTER TABLE "comments" ADD CONSTRAINT "fk_rails_03de2dc08c"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  [1m[35m (6.5ms)[0m  [1m[35mALTER TABLE "posts" ADD CONSTRAINT "fk_rails_5b5ddfd518"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  [1m[35m (2.8ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (6.9ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20170902064316)[0m
  [1m[35m (1.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20170902052432),
(20170902064242);

[0m
  [1m[35m (22.2ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2018-04-20 00:33:40.497619"], ["updated_at", "2018-04-20 00:33:40.497619"]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35mSQL (0.4ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "comments" CASCADE[0m
  [1m[35m (6.9ms)[0m  [1m[35mCREATE TABLE "comments" ("id" bigserial primary key, "uuid" character varying NOT NULL, "user_id" bigint, "post_id" bigint, "body" text DEFAULT '' NOT NULL, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (1.4ms)[0m  [1m[35mCREATE  INDEX  "index_comments_on_post_id" ON "comments"  ("post_id")[0m
  [1m[35m (2.1ms)[0m  [1m[35mCREATE  INDEX  "index_comments_on_user_id" ON "comments"  ("user_id")[0m
  [1m[35m (1.8ms)[0m  [1m[35mCREATE UNIQUE INDEX  "index_comments_on_uuid" ON "comments"  ("uuid")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "posts" CASCADE[0m
  [1m[35m (6.8ms)[0m  [1m[35mCREATE TABLE "posts" ("id" bigserial primary key, "uuid" character varying NOT NULL, "user_id" bigint, "title" character varying DEFAULT '' NOT NULL, "body" text DEFAULT '' NOT NULL, "published_at" timestamp, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX  "index_posts_on_user_id" ON "posts"  ("user_id")[0m
  [1m[35m (4.0ms)[0m  [1m[35mCREATE UNIQUE INDEX  "index_posts_on_uuid" ON "posts"  ("uuid")[0m
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "users" CASCADE[0m
  [1m[35m (4.0ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "uuid" character varying NOT NULL, "name" character varying NOT NULL, "email" character varying NOT NULL, "password_digest" character varying NOT NULL, "admin" boolean DEFAULT 'f' NOT NULL, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (4.1ms)[0m  [1m[35mCREATE UNIQUE INDEX  "index_users_on_email" ON "users"  ("email")[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE UNIQUE INDEX  "index_users_on_uuid" ON "users"  ("uuid")[0m
  [1m[35m (2.4ms)[0m  [1m[35mALTER TABLE "comments" ADD CONSTRAINT "fk_rails_2fd19c0db7"
FOREIGN KEY ("post_id")
  REFERENCES "posts" ("id")
[0m
  [1m[35m (1.7ms)[0m  [1m[35mALTER TABLE "comments" ADD CONSTRAINT "fk_rails_03de2dc08c"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  [1m[35m (10.0ms)[0m  [1m[35mALTER TABLE "posts" ADD CONSTRAINT "fk_rails_5b5ddfd518"
FOREIGN KEY ("user_id")
  REFERENCES "users" ("id")
[0m
  [1m[35m (4.0ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  [1m[35m (0.9ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20170902064316)[0m
  [1m[35m (0.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20170902052432),
(20170902064242);

[0m
  [1m[35m (6.3ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.5ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2018-04-20 00:33:40.666355"], ["updated_at", "2018-04-20 00:33:40.666355"]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Started POST "/graphql" for 127.0.0.1 at 2018-04-19 20:34:33 -0400
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"WhoAmi", "variables"=>{}, "query"=>"query WhoAmi {\n  viewer {\n    self {\n      name\n      email\n      __typename\n    }\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"WhoAmi", "variables"=>{}, "query"=>"query WhoAmi {\n  viewer {\n    self {\n      name\n      email\n      __typename\n    }\n    __typename\n  }\n}\n"}}
Completed 200 OK in 167ms (Views: 0.8ms | ActiveRecord: 26.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-04-19 20:34:56 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"SignUpUser", "variables"=>{"credentials"=>{"name"=>"Tyler", "email"=>"tylergaugler16@gmail.com", "password"=>"[FILTERED]"}}, "query"=>"mutation SignUpUser($credentials: AuthProviderCredentials) {\n  createUser(credentials: $credentials) {\n    token\n    user {\n      name\n      email\n      __typename\n    }\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"SignUpUser", "variables"=>{"credentials"=>{"name"=>"Tyler", "email"=>"tylergaugler16@gmail.com", "password"=>"[FILTERED]"}}, "query"=>"mutation SignUpUser($credentials: AuthProviderCredentials) {\n  createUser(credentials: $credentials) {\n    token\n    user {\n      name\n      email\n      __typename\n    }\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (1.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."uuid" = $1 LIMIT $2[0m  [["uuid", "9324a520-2660-0136-364d-3c15c2d411a4"], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "tylergaugler16@gmail.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "users" ("uuid", "name", "email", "password_digest", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["uuid", "9324a520-2660-0136-364d-3c15c2d411a4"], ["name", "Tyler"], ["email", "tylergaugler16@gmail.com"], ["password_digest", "$2a$10$Lj8QRI2XcMuTq/3yjZznf.P6nTMysZKrDW9CS9.d0iudtXXYPRBBa"], ["created_at", "2018-04-20 00:34:56.980799"], ["updated_at", "2018-04-20 00:34:56.980799"]]
  [1m[35m (5.7ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 107ms (Views: 0.3ms | ActiveRecord: 14.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-04-19 20:42:16 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"LogInUser", "variables"=>{"credentials"=>{"email"=>"tylergaugler16@gmail.com", "password"=>"[FILTERED]"}}, "query"=>"mutation LogInUser($credentials: AuthProviderCredentials) {\n  loginUser(credentials: $credentials) {\n    token\n    user {\n      name\n      email\n      __typename\n    }\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"LogInUser", "variables"=>{"credentials"=>{"email"=>"tylergaugler16@gmail.com", "password"=>"[FILTERED]"}}, "query"=>"mutation LogInUser($credentials: AuthProviderCredentials) {\n  loginUser(credentials: $credentials) {\n    token\n    user {\n      name\n      email\n      __typename\n    }\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.7ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."email" = $1 LIMIT $2[0m  [["email", "tylergaugler16@gmail.com"], ["LIMIT", 1]]
Completed 200 OK in 83ms (Views: 0.3ms | ActiveRecord: 1.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-04-19 20:42:20 -0400
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"Posts", "variables"=>{}, "query"=>"query Posts {\n  viewer {\n    public_posts {\n      totalCount\n      edges {\n        node {\n          id\n          title\n          excerpt\n          body\n          published_at_ms\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"Posts", "variables"=>{}, "query"=>"query Posts {\n  viewer {\n    public_posts {\n      totalCount\n      edges {\n        node {\n          id\n          title\n          excerpt\n          body\n          published_at_ms\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n"}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."uuid" = $1 LIMIT $2[0m  [["uuid", "9324a520-2660-0136-364d-3c15c2d411a4"], ["LIMIT", 1]]
  [1m[35m (0.7ms)[0m  [1m[34mSELECT COUNT(*) FROM "posts" WHERE ("posts"."published_at" IS NOT NULL)[0m
  [1m[36mPost Load (0.4ms)[0m  [1m[34mSELECT  "posts".* FROM "posts" WHERE ("posts"."published_at" IS NOT NULL) LIMIT $1 OFFSET $2[0m  [["LIMIT", 30], ["OFFSET", 0]]
Completed 200 OK in 24ms (Views: 0.2ms | ActiveRecord: 5.9ms)


